@model QuizForam.Areas.Admin.Models.Organization

@using (Html.BeginForm("Create", "Organization", FormMethod.Post, new { enctype = "multipart/form-data", @id = "formCreate", @name = "formCreate" }))
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel"><span class="text-danger">Add Organization </span></h4>
    </div>


    <div class="modal-body custom-body">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.OrganizationName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.OrganizationName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.OrganizationName, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.SortName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.SortName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.SortName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.PhoneNo1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneNo1, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.PhoneNo1, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.PhoneNo2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PhoneNo2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNo2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.SenderEmailId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.SenderEmailId, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.SenderEmailId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LoginName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LoginName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.LoginName, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.NewPssword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.NewPssword, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.NewPssword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.LogoFile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.TextBoxFor(x => x.Logo, new { type = "hidden" })
                    @Html.TextBoxFor(model => model.LogoFile, new { type = "file", htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.LogoFile, "", new { @class = "text-danger" })
                </div>
            </div>



        </div>
    </div>
    <div class="modal-footer" style="text-align:center !important">

        <button type="submit" class="btn btn-primary" id="BtnCreate"><i class="ace-icon fa fa-check bigger-110"></i>Create</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="ace-icon fa fa-close bigger-110"></i>Close</button>
    </div>
}

<script>
    jQuery(function ($) {


        $('#LogoFile').ace_file_input({
            style: 'well',
            btn_choose: 'Drop files here or click to choose',
            btn_change: null,
            no_icon: 'ace-icon fa fa-cloud-upload',
            droppable: true,
            thumbnail: 'fit'//small |  large | fit
        }).on('change', function () { });

        $("#BtnCreate").click(function () {
            if ($("#formCreate").valid()) {
            }
            else {
                return false;
            }
        });
    });


</script>